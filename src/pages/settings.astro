---
import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro";
import BottomLayout from "@layouts/BottomLayout.astro";
import Container from "@components/Container.astro";
---

<PageLayout title="Settings" description="Configure your site settings">
  <TopLayout>
    <div class="animate text-center">
      <h1 class="text-3xl lg:text-4xl font-bold">Settings</h1>
      <p class="text-sm lg:text-base text-black/70 dark:text-white/70 mt-2">
        Configure your site preferences
      </p>
    </div>
  </TopLayout>
  
  <BottomLayout>
    <Container size="960">
      <div class="animate" id="settings-container">
        <!-- Front Page Settings -->
        <div class="bg-white dark:bg-neutral-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
          <h2 class="text-xl font-semibold mb-4">Front Page Settings</h2>
          
          <!-- View Mode Setting -->
          <div class="mb-6">
            <label for="view-mode" class="block text-sm font-medium mb-2">
              View Mode
            </label>
            <select 
              id="view-mode" 
              class="w-full px-3 py-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-neutral-700 text-black dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="normal">Normal - Show article preview text</option>
              <option value="compact">Compact - Show only first paragraph</option>
            </select>
            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">
              Choose how articles are displayed on the front page
            </p>
          </div>
          
          <!-- Text Limit Setting (only for normal mode) -->
          <div id="text-limit-container" class="mb-6">
            <label for="text-limit" class="block text-sm font-medium mb-2">
              Front Page Article Text Limit
            </label>
            <div class="flex items-center gap-4">
              <input 
                type="range" 
                id="text-limit-slider" 
                min="500" 
                max="5000" 
                step="100" 
                value="1000"
                class="flex-1"
              />
              <input 
                type="number" 
                id="text-limit-input" 
                min="500" 
                max="5000" 
                step="100" 
                value="1000"
                class="w-24 px-3 py-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-neutral-700 text-black dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <span class="text-sm">words</span>
            </div>
            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">
              Maximum number of words to show in article previews (500-5000)
            </p>
          </div>
        </div>

        <!-- Layout Settings -->
        <div class="bg-white dark:bg-neutral-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
          <h2 class="text-xl font-semibold mb-4">Layout Settings</h2>
          
          <!-- Highlights Column Setting -->
          <div class="mb-6">
            <label class="flex items-center gap-3">
              <input 
                type="checkbox" 
                id="show-highlights-column" 
                checked
                class="w-5 h-5 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-neutral-700 text-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-0"
              />
              <div>
                <span class="text-sm font-medium">Show Highlights Column</span>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  Display the highlights column on the right side of the front page (desktop only)
                </p>
              </div>
            </label>
          </div>
        </div>
        
        <!-- Save Button -->
        <div class="flex justify-end">
          <button 
            id="save-settings" 
            class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200"
          >
            Save Settings
          </button>
        </div>
      </div>
    </Container>
  </BottomLayout>
</PageLayout>

<script>
  // Get DOM elements
  const viewModeSelect = document.getElementById('view-mode') as HTMLSelectElement;
  const textLimitContainer = document.getElementById('text-limit-container');
  const textLimitSlider = document.getElementById('text-limit-slider') as HTMLInputElement;
  const textLimitInput = document.getElementById('text-limit-input') as HTMLInputElement;
  const showHighlightsColumnCheckbox = document.getElementById('show-highlights-column') as HTMLInputElement;
  const saveButton = document.getElementById('save-settings');
  
  // Load settings from localStorage
  function loadSettings() {
    const settings = JSON.parse(localStorage.getItem('siteSettings') || '{}');
    
    // Set view mode
    if (settings.viewMode) {
      viewModeSelect.value = settings.viewMode;
    }
    
    // Set text limit
    if (settings.frontPageArticleTextLimit) {
      textLimitSlider.value = settings.frontPageArticleTextLimit.toString();
      textLimitInput.value = settings.frontPageArticleTextLimit.toString();
    }
    
    // Set highlights column visibility
    if (settings.showHighlightsColumn !== undefined) {
      showHighlightsColumnCheckbox.checked = settings.showHighlightsColumn;
    }
    
    // Show/hide text limit based on view mode
    updateTextLimitVisibility();
  }
  
  // Save settings to localStorage
  function saveSettings() {
    const settings = {
      viewMode: viewModeSelect.value,
      frontPageArticleTextLimit: parseInt(textLimitInput.value),
      showHighlightsColumn: showHighlightsColumnCheckbox.checked
    };
    
    localStorage.setItem('siteSettings', JSON.stringify(settings));
    
    // Dispatch event to notify other components
    window.dispatchEvent(new CustomEvent('settingsChanged', { detail: settings }));
    
    // Show success message
    const successMessage = document.createElement('div');
    successMessage.className = 'fixed top-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg z-50';
    successMessage.textContent = 'Settings saved successfully!';
    document.body.appendChild(successMessage);
    
    setTimeout(() => {
      successMessage.remove();
    }, 3000);
    
    // Reload the homepage if we're changing view settings
    if (window.location.pathname === '/' || document.referrer.includes(window.location.origin)) {
      setTimeout(() => {
        window.location.reload();
      }, 1000);
    }
  }
  
  // Update text limit visibility based on view mode
  function updateTextLimitVisibility() {
    if (viewModeSelect.value === 'compact') {
      textLimitContainer?.classList.add('opacity-50', 'pointer-events-none');
    } else {
      textLimitContainer?.classList.remove('opacity-50', 'pointer-events-none');
    }
  }
  
  // Sync slider and input
  function syncSliderAndInput() {
    textLimitSlider.value = textLimitInput.value;
  }
  
  function syncInputAndSlider() {
    textLimitInput.value = textLimitSlider.value;
  }
  
  // Event listeners
  viewModeSelect?.addEventListener('change', updateTextLimitVisibility);
  textLimitSlider?.addEventListener('input', syncInputAndSlider);
  textLimitInput?.addEventListener('input', syncSliderAndInput);
  saveButton?.addEventListener('click', saveSettings);
  
  // Initialize
  loadSettings();
</script>

<style>
  input[type="range"] {
    @apply appearance-none bg-gray-200 dark:bg-gray-700 h-2 rounded-lg outline-none;
  }
  
  input[type="range"]::-webkit-slider-thumb {
    @apply appearance-none w-4 h-4 bg-blue-600 rounded-full cursor-pointer;
  }
  
  input[type="range"]::-moz-range-thumb {
    @apply w-4 h-4 bg-blue-600 rounded-full cursor-pointer border-0;
  }
</style>